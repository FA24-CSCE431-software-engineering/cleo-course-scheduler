<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Your Degree Planner</title>
  <%= csrf_meta_tags %>
</head>

<body>

  <%= render 'shared/navbar_student' %>

  <%# Main heading for the degree planner page %>
  <div class="degreeplan-body">
    <h1 class="degreeplan-title">Your Degree Planner</h1>
      <% if flash[:success] %>
        <div class="alert alert-success"><%= flash[:success] %></div>
      <% elsif flash[:error] %>
        <div class="alert alert-danger"><%= flash[:error] %></div>
      <% end %>

    <%# 
      Form to add a new course to a specific semester.
      The form allows the user to select a course and specify which semester it should be added to.
    %>
    <%= form_with url: update_plan_student_degree_planner_path(@student), method: :patch, class: 'add-course-form' do |f| %>
      <h4>Add a Course</h4>
      <%= label_tag :add_course, "Course" %>
      <%= select_tag :add_course, 
        options_for_select(
          Course.order(:ccode, :cnumber).map { |course| [ "#{course.ccode} #{course.cnumber} - #{course.cname}", course.id ] }
        ), 
        class: "searchable-select" 
      %>

      <%= label_tag :sem, "Semester" %>
      <%= number_field_tag :sem, nil, min: 1, max: 20, id: 'semester-input' %> <!-- Add an ID here -->

      <%= f.submit "Add Course", class: 'add-course-button' %>

    <% end %>

    <div class="setting-buttons">
      <%= form_with url: set_default_student_degree_planner_path(@student), method: :post do |f| %>
        <%= f.submit 'Reset Degree Plan', class: 'action-button default-degree-button', data: { confirm: 'This will replace all currently added courses. Are you sure you want to clear all courses?' } %>
      <% end %>

      <%= form_with url: clear_courses_student_degree_planner_path(@student), method: :delete do |f| %>
        <%= f.submit 'Clear Degree Plan', class: 'action-button clear-button', data: { confirm: 'Are you sure you want to clear all courses?' } %>
      <% end %>
    </div>
    <br>

    <%# 
      Grid layout for displaying each semester.
      Each semester contains a table of courses that are already added to that semester.
    %>
    <div class="degreeplan2-grid">
      <% (1..8).each do |sem| %>
        <div class="semester2-container">
          <h3>Semester <%= sem %>:</h3>

          <%# Table listing the courses assigned to this semester %>
          <table>
            <thead>
              <tr>
                <th>Course Code</th>
                <th>Course Name</th>
                <th>Credits</th>
                <th>Action</th>
              </tr>
            </thead>
            <tbody id="semester-<%= sem %>-courses">
              <% @student.student_courses.where(sem: sem).each do |student_course| %>
                <tr id="course-<%= student_course.course.id %>-semester-<%= sem %>">
                  <td><%= "#{student_course.course.ccode} #{student_course.course.cnumber}" %></td> 
                  <td><%= student_course.course.cname %></td>
                  <td><%= student_course.course.credit_hours %></td>
                  <td>
                    <%# Link to remove the course from the semester %>
                    <%= link_to 'Remove', remove_course_student_degree_planner_path(@student, course_id: student_course.course.id), 
                                  method: :delete, 
                                  data: { confirm: "Are you sure you want to remove this course?" }, 
                                  class: 'remove-course-button' %>
                  </td>
                </tr>
              <% end %>
            </tbody>
          </table>
        </div>
      <% end %>
    </div>

    <%# 
      Action buttons for saving and downloading the degree plan.
      These forms allow the user to either save or download the current plan.
    %>
    <div class="action-buttons">
      <%= form_with url: upload_plan_student_degree_planner_path(@student), method: :post, html: { multipart: true } do |f| %>
          <div class="form-group">
              <%= label_tag :file, "Upload CSV" %>
              <%= file_field_tag :file, class: 'form-control' %>
          </div>
          <div class="button-group">
              <%= f.submit "Upload Degree Plan", class: "action-button upload-button", data: { confirm: 'This will replace all currently added courses. Are you sure?' } %>
          </div>
      <% end %>
      
      <%= form_with url: download_plan_student_degree_planner_path(@student, format: :csv), method: :get do |f| %>
          <div class="button-group">
              <%= f.submit 'Download Degree Plan', class: 'action-button download-button' %>
          </div>
      <% end %>
    </div>


    <%# 
      Form to generate a degree planner based on the student's selected interests.
      Includes fields for track, emphasis area, and targeted graduation year.
    %>
    <h2 class="generate-form-title">Generate Based on Interests</h2>
    <%= form_with url: student_degree_planner_path(@student), method: :post, class: "generate-form" do |f| %>
      
      <!--
      <div class="generate_form-group">
        <%= label_tag :track_id, "Track", class: "generate-label" %>
        <%= select_tag "interests[track_id]", options_from_collection_for_select(Track.all, :id, :tname), class: 'interest-select' %>
      </div>
      -->


      <div class="generate_form-group">
        <%= label_tag :emphasis_area, "Emphasis Area", class: "generate-label" %>
        <%= select_tag "interests[emphasis_area]", options_for_select([['Data Science', 'data_science'], ['Software Engineering', 'software_engineering'], ['Cybersecurity', 'cybersecurity']]), class: 'interest-select' %>
      </div>

      <div class="generate_form-group">
        <%= label_tag :target_graduation, "Targeted Graduation Year", class: "generate-label" %>
        <%= select_tag "interests[target_graduation]", options_for_select((2025..2035).to_a), class: 'interest-select' %>
      </div>

      <%= f.submit "Generate Planner", class: 'generate-planner-button' %>
    <% end %>
    <br>

    

  <script>
    <%# 
      JavaScript functionality to handle the removal of courses from a semester.
      Sends a DELETE request when the "Remove" link is clicked and reloads the page on success.
    %>
    document.querySelectorAll('.remove-course-button').forEach(function(link) {
        link.addEventListener('click', function(e) {
            e.preventDefault(); // Prevent the default anchor click behavior

            const courseId = e.currentTarget.getAttribute('data-course-id'); // Get the course ID

            if (confirm("Are you sure you want to remove this course?")) {
                // Make the DELETE request using Fetch API
                fetch(e.currentTarget.href, {
                    method: 'DELETE',
                    headers: {
                        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                    }
                })
                .then(response => {
                    if (response.redirected) {
                        window.location.href = response.url; // Handle redirect
                    } else if (response.ok) {
                        alert('Course removed successfully!');
                        window.location.href = `/students/${<%= @student.id %>}/degree_planner`; // Adjust the path if necessary
                    } else {
                        alert('Failed to remove the course.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while removing the course.');
                });
            }
        });
    });
  </script>

  <script>
    <%# 
      JavaScript to toggle the dropdown menu visibility when the user clicks on the avatar.
      Also hides the dropdown if the user clicks outside the menu.
    %>
    document.addEventListener('DOMContentLoaded', function() {
      const avatar = document.getElementById('avatar');
      const dropdownMenu = document.getElementById('dropdown-menu');

      // Toggle dropdown visibility
      avatar.addEventListener('click', function() {
        dropdownMenu.classList.toggle('profile-show');
      });

      // Hide dropdown if clicking outside
      document.addEventListener('click', function(event) {
        if (!avatar.contains(event.target) && !dropdownMenu.contains(event.target)) {
          dropdownMenu.classList.remove('profile-show');
        }
      });
    });
  </script>

  <script>
    <%# 
      JavaScript to reprompt the user when clearing courses.
    %>
    document.addEventListener('DOMContentLoaded', function() {
      // Adding confirmation for the clear button
      document.querySelector('.clear-button').addEventListener('click', function(event) {
        const confirmed = confirm('Are you sure you want to clear all courses?');
        if (!confirmed) {
          event.preventDefault(); // Prevent form submission if not confirmed
        }
      });
    });

    document.addEventListener('DOMContentLoaded', function() {
      // Adding confirmation for the clear button
      document.querySelector('.default-degree-button').addEventListener('click', function(event) {
        const confirmed = confirm('This will replace all currently added courses. Are you sure you want to clear all courses?');
        if (!confirmed) {
          event.preventDefault(); // Prevent form submission if not confirmed
        }
      });
    });

    document.addEventListener('DOMContentLoaded', function() {
      // Adding confirmation for the clear button
      document.querySelector('.upload-button').addEventListener('click', function(event) {
        const confirmed = confirm('This will replace all currently added courses. Are you sure?');
        if (!confirmed) {
          event.preventDefault(); // Prevent form submission if not confirmed
        }
      });
    });
    //show a red box for semester if the semester number is not selected 
    
    document.addEventListener('DOMContentLoaded', function() {
      // Existing code...

      document.querySelector('.add-course-button').addEventListener('click', function(event) {
        const semesterInput = document.getElementById('semester-input');
        const semesterValue = semesterInput.value;

        // Reset the border style
        semesterInput.style.border = '';

        if (!semesterValue || semesterValue < 1 || semesterValue > 20) {
          // If the semester input is empty or not within the allowed range
          semesterInput.style.border = '2px solid red'; // Add red border
          event.preventDefault(); // Prevent form submission
        }
      });
    });


  </script>
  </div>
</body>
