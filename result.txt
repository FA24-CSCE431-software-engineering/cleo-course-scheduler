Inspecting 210 files
...CCCCCCWCCWC.CCC.WC.................C....CC.CCCC........C.C.CC......C.C...............CC.CCCCCC......................CF..CCCCCW...C.............................................................................

Offenses:

app/controllers/admin/core_categories_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
app/controllers/admin/core_categories_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app/controllers/admin/core_categories_controller.rb:2:1: C: [Correctable] Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
module Admin
^^^^^^
app/controllers/admin/core_categories_controller.rb:55:52: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
      params.require(:core_category).permit(:cname) 
                                                   ^
app/controllers/admin/courses_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
app/controllers/admin/courses_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app/controllers/admin/courses_controller.rb:2:1: C: [Correctable] Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
module Admin
^^^^^^
app/controllers/admin/courses_controller.rb:60:120: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
      params.require(:course).permit(:cnumber, :cname, :ccode, :description, :credit_hours, :lecture_hours, :lab_hours)  # are these enough?
                                                                                                                       ^
app/controllers/admin/courses_controller.rb:60:121: C: Layout/LineLength: Line is too long. [140/120]
      params.require(:course).permit(:cnumber, :cname, :ccode, :description, :credit_hours, :lecture_hours, :lab_hours)  # are these enough?
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/dashboard_controller.rb:8:5: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
    def show ...
    ^^^^^^^^
app/controllers/admin/emphases_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
app/controllers/admin/emphases_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app/controllers/admin/emphases_controller.rb:2:1: C: [Correctable] Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
module Admin  
^^^^^^
app/controllers/admin/emphases_controller.rb:2:13: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
module Admin  
            ^^
app/controllers/admin/emphases_controller.rb:5:40: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
    before_action :set_emphasis, only: [:show, :edit, :update, :destroy]
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/emphases_controller.rb:7:5: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
    def confirm_destroy ...
    ^^^^^^^^^^^^^^^^^^^
app/controllers/admin/emphases_controller.rb:12:48: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      redirect_to admin_emphases_path, notice: "Emphasis successfully deleted."
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/emphases_controller.rb:15:5: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
    def edit ...
    ^^^^^^^^
app/controllers/admin/emphases_controller.rb:23:5: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
    def new ...
    ^^^^^^^
app/controllers/admin/emphases_controller.rb:26:5: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
    def show ...
    ^^^^^^^^
app/controllers/admin/emphases_controller.rb:31:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        redirect_to admin_emphases_path, notice: "Emphasis successfully updated."
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/emphases_controller.rb:41:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        redirect_to admin_emphases_path, notice: "Emphasis successfully created."
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/majors_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
app/controllers/admin/majors_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app/controllers/admin/majors_controller.rb:2:1: C: [Correctable] Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
module Admin
^^^^^^
app/controllers/admin/majors_controller.rb:57:52: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
      params.require(:major).permit(:mname, :cname)  
                                                   ^^
app/controllers/admin/student_courses_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module Admin
^
app/controllers/admin/student_courses_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    class StudentCoursesController < ApplicationController
^^^^
app/controllers/admin/student_courses_controller.rb:3:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        before_action :set_student_course, only: %i[edit update destroy confirm_destroy]
    ^^^^
app/controllers/admin/student_courses_controller.rb:4:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/student_courses_controller.rb:6:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        skip_before_action :authenticate_student_login! if Rails.env.test?
    ^^^^
app/controllers/admin/student_courses_controller.rb:7:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/student_courses_controller.rb:8:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        def index
    ^^^^
app/controllers/admin/student_courses_controller.rb:9:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
        if params[:student_id].present?
        
app/controllers/admin/student_courses_controller.rb:10:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            @student = Student.find(params[:student_id])
        ^^^^
app/controllers/admin/student_courses_controller.rb:13:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            @student_courses = StudentCourse.none
        ^^^^
app/controllers/admin/student_courses_controller.rb:15:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/student_courses_controller.rb:18:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/student_courses_controller.rb:19:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        def show
    ^^^^
app/controllers/admin/student_courses_controller.rb:20:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
        @student_course = StudentCourse.find_by!(student_id: params[:student_id].to_s, course_id: params[:course_id])
        
app/controllers/admin/student_courses_controller.rb:22:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/student_courses_controller.rb:23:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        def new
    ^^^^
app/controllers/admin/student_courses_controller.rb:24:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
        @student_course = StudentCourse.new
        
app/controllers/admin/student_courses_controller.rb:26:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/student_courses_controller.rb:27:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        def create
    ^^^^
app/controllers/admin/student_courses_controller.rb:28:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
        @student_course = StudentCourse.new(student_course_params)
        
app/controllers/admin/student_courses_controller.rb:30:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            redirect_to admin_student_courses_path(student_id: @student_course.student_id), notice: 'Course added successfully.'
        ^^^^
app/controllers/admin/student_courses_controller.rb:30:121: C: [Correctable] Layout/LineLength: Line is too long. [128/120]
            redirect_to admin_student_courses_path(student_id: @student_course.student_id), notice: 'Course added successfully.'
                                                                                                                        ^^^^^^^^
app/controllers/admin/student_courses_controller.rb:32:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            flash.now[:alert] = @student_course.errors.full_messages.join(', ')
        ^^^^
app/controllers/admin/student_courses_controller.rb:36:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/student_courses_controller.rb:37:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        def edit
    ^^^^
app/controllers/admin/student_courses_controller.rb:38:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            @student_course = StudentCourse.find_by!(
        ^^^^
app/controllers/admin/student_courses_controller.rb:39:17: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
                student_id: params[:student_id].to_s,  ...
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/student_courses_controller.rb:39:54: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
                student_id: params[:student_id].to_s, 
                                                     ^
app/controllers/admin/student_courses_controller.rb:40:47: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
                course_id: params[:course_id], 
                                              ^
app/controllers/admin/student_courses_controller.rb:44:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            redirect_to admin_student_courses_path, alert: 'Student course not found.'
        ^^^^
app/controllers/admin/student_courses_controller.rb:46:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/student_courses_controller.rb:47:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        def update
    ^^^^
app/controllers/admin/student_courses_controller.rb:49:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
        @student_course = set_student_course
        
app/controllers/admin/student_courses_controller.rb:51:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            redirect_to admin_student_courses_path(student_id: @student_course.student_id), notice: 'Course updated successfully.'
        ^^^^
app/controllers/admin/student_courses_controller.rb:51:121: C: [Correctable] Layout/LineLength: Line is too long. [130/120]
            redirect_to admin_student_courses_path(student_id: @student_course.student_id), notice: 'Course updated successfully.'
                                                                                                                        ^^^^^^^^^^
app/controllers/admin/student_courses_controller.rb:53:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            render :edit
        ^^^^
app/controllers/admin/student_courses_controller.rb:56:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/student_courses_controller.rb:57:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        def destroy
    ^^^^
app/controllers/admin/student_courses_controller.rb:58:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
        @student_course = set_student_course
        
app/controllers/admin/student_courses_controller.rb:60:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            @student_course.destroy
        ^^^^
app/controllers/admin/student_courses_controller.rb:61:85: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
            redirect_to admin_student_courses_path(student_id: params[:student_id]), 
                                                                                    ^
app/controllers/admin/student_courses_controller.rb:62:17: C: [Correctable] Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
                status: :see_other, notice: 'Course removed successfully.'
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/student_courses_controller.rb:64:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            redirect_to admin_student_courses_path, alert: 'Unable to remove course.'
        ^^^^
app/controllers/admin/student_courses_controller.rb:67:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/student_courses_controller.rb:68:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        def confirm_destroy
    ^^^^
app/controllers/admin/student_courses_controller.rb:69:9: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 8 instead of 10).
        # @student_course = StudentCourse.find(params[:id])
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/student_courses_controller.rb:71:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/student_courses_controller.rb:72:9: C: [Correctable] Layout/AccessModifierIndentation: Indent access modifiers like private.
        private
        ^^^^^^^
app/controllers/admin/student_courses_controller.rb:73:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/student_courses_controller.rb:74:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        def set_student_course
    ^^^^
app/controllers/admin/student_courses_controller.rb:75:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
        @student_course = StudentCourse.find_by!(student_id: params[:student_id].to_s, course_id: params[:course_id], sem: params[:sem])
        
app/controllers/admin/student_courses_controller.rb:75:121: C: [Correctable] Layout/LineLength: Line is too long. [136/120]
        @student_course = StudentCourse.find_by!(student_id: params[:student_id].to_s, course_id: params[:course_id], sem: params[:sem])
                                                                                                                        ^^^^^^^^^^^^^^^^
app/controllers/admin/student_courses_controller.rb:76:1: C: [Correctable] Layout/EmptyLinesAroundExceptionHandlingKeywords: Extra empty line detected before the rescue.
app/controllers/admin/student_courses_controller.rb:78:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            flash[:alert] = 'Student course not found.'
        ^^^^
app/controllers/admin/student_courses_controller.rb:81:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/student_courses_controller.rb:82:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        def student_course_params
    ^^^^
app/controllers/admin/student_courses_controller.rb:83:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
        params.require(:student_course).permit(:student_id, :course_id, :sem)  
        
app/controllers/admin/student_courses_controller.rb:83:78: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        params.require(:student_course).permit(:student_id, :course_id, :sem)  
                                                                             ^^
app/controllers/admin/student_courses_controller.rb:86:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
app/controllers/admin/tracks_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
app/controllers/admin/tracks_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app/controllers/admin/tracks_controller.rb:2:1: C: [Correctable] Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
module Admin
^^^^^^
app/controllers/admin/tracks_controller.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    class TracksController < ApplicationController
^^^^
app/controllers/admin/tracks_controller.rb:5:39: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
      before_action :set_track, only: [:update, :destroy]
                                      ^^^^^^^^^^^^^^^^^^^
app/controllers/admin/tracks_controller.rb:9:27: C: [Correctable] Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
        @track = set_track()
                          ^^
app/controllers/admin/tracks_controller.rb:13:7: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.
      def index
      ^^^^^^^^^
app/controllers/admin/tracks_controller.rb:17:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/tracks_controller.rb:21:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          redirect_to admin_tracks_path, notice: "Track successfully created."
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/tracks_controller.rb:27:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/tracks_controller.rb:28:7: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
      def edit ...
      ^^^^^^^^
app/controllers/admin/tracks_controller.rb:30:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/tracks_controller.rb:33:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          redirect_to admin_tracks_path, notice: "Track successfully updated."
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/tracks_controller.rb:39:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/tracks_controller.rb:42:48: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        redirect_to admin_tracks_path, notice: "Track successfully deleted."
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin/tracks_controller.rb:44:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/tracks_controller.rb:46:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/tracks_controller.rb:50:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admin/tracks_controller.rb:55:3: W: [Correctable] Layout/EndAlignment: end at 55, 2 is not aligned with module at 2, 0.
  end
  ^^^
app/controllers/admin/tracks_controller.rb:56:1: C: [Correctable] Layout/TrailingEmptyLines: 2 trailing blank lines detected.
app/controllers/admin/tracks_controller.rb:56:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/application_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationController < ActionController::Base
^
app/controllers/application_controller.rb:9:26: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
    current_student_login 
                         ^
app/controllers/courses_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CoursesController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CoursesController < ApplicationController
^
app/controllers/courses_controller.rb:58:118: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
    params.require(:course).permit(:cnumber, :cname, :ccode, :description, :credit_hours, :lecture_hours, :lab_hours)  # are these enough?
                                                                                                                     ^
app/controllers/courses_controller.rb:58:121: C: Layout/LineLength: Line is too long. [138/120]
    params.require(:course).permit(:cnumber, :cname, :ccode, :description, :credit_hours, :lecture_hours, :lab_hours)  # are these enough?
                                                                                                                        ^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:60:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/def_degree_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
app/controllers/def_degree_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app/controllers/def_degree_controller.rb:2:1: C: [Correctable] Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
class DefDegreeController < ApplicationController
^^^^^
app/controllers/def_degree_controller.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def show
^^^^
app/controllers/def_degree_controller.rb:4:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def show ...
    ^^^^^^^^
app/controllers/def_degree_controller.rb:8:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/def_degree_controller.rb:11:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def new
^^^^
app/controllers/def_degree_controller.rb:11:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def new ...
    ^^^^^^^
app/controllers/def_degree_controller.rb:13:26: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
      @tracks = Track.all 
                         ^
app/controllers/def_degree_controller.rb:14:37: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
      @emphasis_areas = Emphasis.all 
                                    ^
app/controllers/def_degree_controller.rb:18:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def save
^^^^
app/controllers/def_degree_controller.rb:18:5: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.
    def save
    ^^^^^^^^
app/controllers/def_degree_controller.rb:18:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def save ...
    ^^^^^^^^
app/controllers/def_degree_controller.rb:18:5: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
    def save ...
    ^^^^^^^^
app/controllers/def_degree_controller.rb:21:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def download
^^^^
app/controllers/def_degree_controller.rb:21:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def download ...
    ^^^^^^^^^^^^
app/controllers/def_degree_controller.rb:21:5: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
    def download ...
    ^^^^^^^^^^^^
app/controllers/def_degree_controller.rb:26:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def generate_degree_plan(student)
^^^^
app/controllers/def_degree_controller.rb:26:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def generate_degree_plan(student) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/def_degree_controller.rb:31:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/controllers/def_degree_controller.rb:32:3: W: [Correctable] Layout/EndAlignment: end at 32, 2 is not aligned with class at 2, 0.
  end
  ^^^
app/controllers/def_degree_controller.rb:33:1: C: [Correctable] Layout/TrailingEmptyLines: 1 trailing blank lines detected.
app/controllers/def_degree_controller.rb:33:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/degree_planners_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class DegreePlannersController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/degree_planners_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class DegreePlannersController < ApplicationController
^
app/controllers/degree_planners_controller.rb:14:121: C: [Correctable] Layout/LineLength: Line is too long. [121/120]
    @student_course = StudentCourse.new(student_id: current_student.id, course_id: params[:course_id], sem: params[:sem])
                                                                                                                        ^
app/controllers/degree_planners_controller.rb:15:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/degree_planners_controller.rb:17:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      flash[:success] = "Course added successfully!"
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/degree_planners_controller.rb:20:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      flash[:error] = "Error adding course."
                      ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/degree_planners_controller.rb:28:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/degree_planners_controller.rb:36:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/degree_planners_controller.rb:42:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/degree_planners_controller.rb:45:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      flash[:success] = "Course removed successfully!"
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/degree_planners_controller.rb:47:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      flash[:error] = "Course not found in your planner."
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/degree_planners_controller.rb:49:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/degree_planners_controller.rb:51:72: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
      format.html { redirect_to student_degree_planner_path(@student) } 
                                                                       ^
app/controllers/degree_planners_controller.rb:52:39: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
      format.json { head :no_content } 
                                      ^
app/controllers/degree_planners_controller.rb:55:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/degree_planners_controller.rb:57:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.
  def generate_custom_plan
  ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/degree_planners_controller.rb:57:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def generate_custom_plan ...
  ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/degree_planners_controller.rb:58:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/degree_planners_controller.rb:61:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def download_plan ...
  ^^^^^^^^^^^^^^^^^
app/controllers/degree_planners_controller.rb:62:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/degree_planners_controller.rb:64:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/degree_planners_controller.rb:71:5: C: [Correctable] Style/GuardClause: Use a guard clause (return if @student) instead of wrapping the code inside a conditional expression.
    unless @student
    ^^^^^^
app/controllers/degree_planners_controller.rb:71:5: C: [Correctable] Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless @student
    ^^^^^^
app/controllers/degree_planners_controller.rb:72:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      redirect_to some_error_path, alert: "Student not found."
                                          ^^^^^^^^^^^^^^^^^^^^
app/controllers/degree_planners_controller.rb:76:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def generate_plan_based_on_interests(interests) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/degree_planners_controller.rb:77:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/degree_planners_controller.rb:80:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/degree_planners_controller.rb:81:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/controllers/student_courses_controller.rb:71:74: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
    params.require(:student_course).permit(:student_id, :course_id, :sem)  
                                                                         ^^
app/controllers/student_dashboards_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/student_dashboards_controller.rb:15:1: C: [Correctable] Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body beginning.
app/controllers/student_dashboards_controller.rb:17:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "fall"
      ^^^^^^
app/controllers/student_dashboards_controller.rb:19:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "spring"
      ^^^^^^^^
app/controllers/student_dashboards_controller.rb:25:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 3.
  def set_student
  ^^^^^^^^^^^^^^^
app/controllers/student_dashboards_controller.rb:25:3: C: Metrics/AbcSize: Assignment Branch Condition size for set_student is too high. [<1, 22, 4> 22.38/17]
  def set_student ...
  ^^^^^^^^^^^^^^^
app/controllers/student_dashboards_controller.rb:28:5: C: [Correctable] Style/GuardClause: Use a guard clause (return if @student) instead of wrapping the code inside a conditional expression.
    unless @student
    ^^^^^^
app/controllers/student_dashboards_controller.rb:30:58: C: [Correctable] Style/RedundantArgument: Argument " " is redundant because it is implied by default.
        first_name: current_student_login.full_name.split(" ").first,
                                                         ^^^^^
app/controllers/student_dashboards_controller.rb:30:59: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        first_name: current_student_login.full_name.split(" ").first,
                                                          ^^^
app/controllers/student_dashboards_controller.rb:31:57: C: [Correctable] Style/RedundantArgument: Argument " " is redundant because it is implied by default.
        last_name: current_student_login.full_name.split(" ").last,
                                                        ^^^^^
app/controllers/student_dashboards_controller.rb:31:58: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        last_name: current_student_login.full_name.split(" ").last,
                                                         ^^^
app/controllers/student_dashboards_controller.rb:37:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        grad_semester: current_semester == "fall" ? "spring" : "fall" 
                                           ^^^^^^
app/controllers/student_dashboards_controller.rb:37:53: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        grad_semester: current_semester == "fall" ? "spring" : "fall" 
                                                    ^^^^^^^^
app/controllers/student_dashboards_controller.rb:37:64: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        grad_semester: current_semester == "fall" ? "spring" : "fall" 
                                                               ^^^^^^
app/controllers/student_dashboards_controller.rb:37:70: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        grad_semester: current_semester == "fall" ? "spring" : "fall" 
                                                                     ^
app/controllers/student_dashboards_controller.rb:42:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/controllers/student_dashboards_controller.rb:43:4: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
end 
   ^
app/controllers/student_dashboards_controller.rb:43:5: C: [Correctable] Layout/TrailingEmptyLines: 4 trailing blank lines detected.
end  ...
    
app/controllers/student_dashboards_controller.rb:44:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/student_dashboards_controller.rb:47:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/student_logins/omniauth_callbacks_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/student_logins/omniauth_callbacks_controller.rb:5:5: C: Metrics/AbcSize: Assignment Branch Condition size for google_oauth2 is too high. [<4, 21, 3> 21.59/17]
    def google_oauth2 ...
    ^^^^^^^^^^^^^^^^^
app/controllers/student_logins/omniauth_callbacks_controller.rb:7:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/student_logins/omniauth_callbacks_controller.rb:11:9: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
        if admin_emails.include?(student_login.email)
        ^^
app/controllers/student_logins/omniauth_callbacks_controller.rb:14:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/students_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class StudentsController < ApplicationController
^
app/controllers/students_controller.rb:2:37: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
  before_action :set_student, only: [:edit, :update, :show, :destroy]
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/students_controller.rb:15:3: C: Metrics/AbcSize: Assignment Branch Condition size for new is too high. [<1, 22, 6> 22.83/17]
  def new ...
  ^^^^^^^
app/controllers/students_controller.rb:21:55: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
      enrol_year: params[:enrol_year] || current_year,  # Set enrol_year or fallback to current year
                                                      ^
app/controllers/students_controller.rb:22:40: W: [Correctable] Lint/AmbiguousOperatorPrecedence: Wrap expressions with varying precedence with parentheses to avoid ambiguity.
      grad_year: params[:grad_year] || current_year + 4,
                                       ^^^^^^^^^^^^^^^^
app/controllers/students_controller.rb:24:69: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      grad_semester: params[:grad_semester] || (current_semester == "fall" ? "spring" : "fall")
                                                                    ^^^^^^
app/controllers/students_controller.rb:24:78: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      grad_semester: params[:grad_semester] || (current_semester == "fall" ? "spring" : "fall")
                                                                             ^^^^^^^^
app/controllers/students_controller.rb:24:89: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      grad_semester: params[:grad_semester] || (current_semester == "fall" ? "spring" : "fall")
                                                                                        ^^^^^^
app/controllers/students_controller.rb:41:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
app/controllers/students_controller.rb:42:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.
  def edit; 
  ^^^^^^^^
app/controllers/students_controller.rb:42:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit;  ...
  ^^^^^^^^^^
app/controllers/students_controller.rb:42:11: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
  def edit; 
          ^
app/controllers/students_controller.rb:42:12: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
  def edit; 
           ^
app/controllers/students_controller.rb:45:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
app/controllers/students_controller.rb:46:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.
  def update
  ^^^^^^^^^^
app/controllers/students_controller.rb:51:121: C: [Correctable] Layout/LineLength: Line is too long. [122/120]
        redirect_to profile_student_path(current_student_login), notice: 'Your information has been updated successfully.'
                                                                                                                        ^^
app/controllers/students_controller.rb:66:5: C: [Correctable] Style/GuardClause: Use a guard clause (return unless @student.nil?) instead of wrapping the code inside a conditional expression.
    if @student.nil?
    ^^
app/controllers/students_controller.rb:66:5: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if @student.nil?
    ^^
app/controllers/students_controller.rb:67:41: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      redirect_to students_path, alert: "Student not found."
                                        ^^^^^^^^^^^^^^^^^^^^
app/controllers/students_controller.rb:70:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/students_controller.rb:72:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.
  def profile
  ^^^^^^^^^^^
app/controllers/students_controller.rb:77:5: C: [Correctable] Style/GuardClause: Use a guard clause (return unless @student.nil?) instead of wrapping the code inside a conditional expression.
    if @student.nil?
    ^^
app/controllers/students_controller.rb:77:5: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if @student.nil?
    ^^
app/controllers/students_controller.rb:78:37: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      redirect_to root_path, alert: "Student not found."
                                    ^^^^^^^^^^^^^^^^^^^^
app/controllers/students_controller.rb:82:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/students_controller.rb:84:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
app/controllers/students_controller.rb:87:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
app/controllers/students_controller.rb:90:5: C: [Correctable] Style/GuardClause: Use a guard clause (return unless @student.nil?) instead of wrapping the code inside a conditional expression.
    if @student.nil?
    ^^
app/controllers/students_controller.rb:90:5: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if @student.nil?
    ^^
app/controllers/students_controller.rb:95:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/students_controller.rb:97:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 3.
  def student_params
  ^^^^^^^^^^^^^^^^^^
app/controllers/students_controller.rb:98:121: C: Layout/LineLength: Line is too long. [122/120]
    params.require(:student).permit(:google_id, :first_name, :last_name, :email, :enrol_year, :grad_year, :enrol_semester,
                                                                                                                        ^^
app/controllers/students_controller.rb:102:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
app/controllers/students_controller.rb:102:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/controllers/support_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/course.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/emphasis.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/major.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/student.rb:2:1: C: [Correctable] Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
# frozen_string_literal: true
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/student.rb:28:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
app/models/student.rb:32:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/student.rb:33:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/models/student.rb:35:1: C: [Correctable] Layout/TrailingEmptyLines: 1 trailing blank lines detected.
app/models/student_course.rb:4:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/student_course.rb:5:22: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
  self.primary_key = [:student_id, :course_id]
                     ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/student_login.rb:13:7: C: Naming/PredicateName: Rename is_admin? to admin?.
  def is_admin?
      ^^^^^^^^^
app/models/track.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/devise.rb:17:121: C: Layout/LineLength: Line is too long. [154/120]
  # config.secret_key = 'ba24cfff59dba3d21188c9440b24f99c5d7ba2f84384b88ebb1e1d0ac44a5f1c9173f5ac7b33046424958d0acd3eabd2e6969a1649b5e20bb40f37d9455360c9'
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/devise.rb:129:121: C: Layout/LineLength: Line is too long. [150/120]
  # config.pepper = '279fd14c84c4def425046548932f6ea2ceaedb15d378888d07e304802f869106e5a079572be5dc0ae2669f619a0e3e5fd77f1bfc1000cccbb99af096620e4e13'
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/inflections.rb:23:3: C: [Correctable] Layout/BlockAlignment: end at 23, 2 is not aligned with ActiveSupport::Inflector.inflections(:en) do |inflect| at 21, 0.
  end
  ^^^
config/initializers/sessions_store.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/routes.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Rails.application.routes.draw do
^
config/routes.rb:3:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
config/routes.rb:72:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #Don't know why the admin dashboard rescources don't work but this does so i'm keeping it
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:73:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
config/routes.rb:85:32: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
  resources :def_degree, only: [:show, :new, :create]
                               ^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20240916231041_create_student_courses.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateStudentCourses < ActiveRecord::Migration[7.2] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20240916231041_create_student_courses.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateStudentCourses < ActiveRecord::Migration[7.2]
^
db/migrate/20240916231041_create_student_courses.rb:6:34: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
      t.integer :sem, null: false  # Semester the student plans to take the course
                                 ^
db/migrate/20240917041118_create_degree_requirements.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateDegreeRequirements < ActiveRecord::Migration[7.2] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20240917041118_create_degree_requirements.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateDegreeRequirements < ActiveRecord::Migration[7.2]
^
db/migrate/20240917041118_create_degree_requirements.rb:6:34: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
      t.integer :sem, null: false  # Semester the course is recommended in the default plan
                                 ^
db/migrate/20241010220818_drop_foreign_key_from_student_courses.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class DropForeignKeyFromStudentCourses < ActiveRecord::Migration[7.2]
^
db/migrate/20241010220923_change_google_id_to_string_in_students.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ChangeGoogleIdToStringInStudents < ActiveRecord::Migration[7.2]
^
db/migrate/20241011215135_rename_emphases_id_to_emphasis_id.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class RenameEmphasesIdToEmphasisId < ActiveRecord::Migration[7.2]
^
db/migrate/20241015015653_edit_primary_key_in_students.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class EditPrimaryKeyInStudents < ActiveRecord::Migration[7.2]
^
db/migrate/20241015015653_edit_primary_key_in_students.rb:2:3: C: Metrics/AbcSize: Assignment Branch Condition size for up is too high. [<2, 32, 2> 32.12/17]
  def up ...
  ^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:2:3: C: Metrics/MethodLength: Method has too many lines. [32/20]
  def up ...
  ^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:6:53: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
    drop_table :students if table_exists?(:students)  # Ensure we drop the existing table if it exists
                                                    ^
db/migrate/20241015015653_edit_primary_key_in_students.rb:9:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string "google_id", null: false, primary_key: true  # Set google_id as the primary key
               ^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:9:59: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
      t.string "google_id", null: false, primary_key: true  # Set google_id as the primary key
                                                          ^
db/migrate/20241015015653_edit_primary_key_in_students.rb:10:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string "first_name", limit: 255
               ^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:11:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string "last_name", limit: 255
               ^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:12:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string "email", limit: 255
               ^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:13:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.integer "enrol_year"
                ^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:14:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.integer "enrol_semester"
                ^^^^^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:15:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.integer "grad_year"
                ^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:16:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.integer "grad_semester"
                ^^^^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:17:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.bigint "major_id", null: false
               ^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:18:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.datetime "created_at", null: false
                 ^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:19:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.datetime "updated_at", null: false
                 ^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:20:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.boolean "is_admin", default: false, null: false
                ^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:21:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.bigint "track_id"
               ^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:22:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.bigint "emphases_id"
               ^^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:25:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.index ["emphases_id"], name: "index_students_on_emphases_id"
               ^^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:25:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.index ["emphases_id"], name: "index_students_on_emphases_id"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:26:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.index ["major_id"], name: "index_students_on_major_id"
               ^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:26:35: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.index ["major_id"], name: "index_students_on_major_id"
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:27:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.index ["track_id"], name: "index_students_on_track_id"
               ^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:27:35: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.index ["track_id"], name: "index_students_on_track_id"
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:28:8: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
    end  # <--- Add this end to close the students table definition
       ^
db/migrate/20241015015653_edit_primary_key_in_students.rb:28:10: C: [Correctable] Style/CommentedKeyword: Do not place comments on the same line as the end keyword.
    end  # <--- Add this end to close the students table definition
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:32:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string "student_id", null: false  # Ensure this is a string
               ^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:32:41: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
      t.string "student_id", null: false  # Ensure this is a string
                                        ^
db/migrate/20241015015653_edit_primary_key_in_students.rb:33:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.bigint "course_id", null: false
               ^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:34:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.integer "sem", null: false
                ^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:35:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.datetime "created_at", null: false
                 ^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:36:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.datetime "updated_at", null: false
                 ^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:39:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.index ["course_id"], name: "index_student_courses_on_course_id"
               ^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:39:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.index ["course_id"], name: "index_student_courses_on_course_id"
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:40:15: C: [Correctable] Style/WordArray: Use %w or %W for an array of words.
      t.index ["student_id", "course_id"], name: "index_student_courses_on_student_id_and_course_id", unique: true
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:40:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.index ["student_id", "course_id"], name: "index_student_courses_on_student_id_and_course_id", unique: true
               ^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:40:30: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.index ["student_id", "course_id"], name: "index_student_courses_on_student_id_and_course_id", unique: true
                             ^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:40:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.index ["student_id", "course_id"], name: "index_student_courses_on_student_id_and_course_id", unique: true
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:41:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.index ["student_id"], name: "index_student_courses_on_student_id"
               ^^^^^^^^^^^^
db/migrate/20241015015653_edit_primary_key_in_students.rb:41:37: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.index ["student_id"], name: "index_student_courses_on_student_id"
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20241015073032_fix_student_emphasis_id.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class FixStudentEmphasisId < ActiveRecord::Migration[7.2]
^
db/seeds.rb:2:1: C: [Correctable] Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
# frozen_string_literal: true
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:162:20: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
  puts row['ename']  # Debugging line
                   ^
db/seeds.rb:179:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    CourseEmphasis.find_or_create_by(
^^^^
db/seeds.rb:180:9: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
        course: Course.find_by(ccode: row['ccode'], cnumber: row['cnumber']), ...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:182:5: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 6 (not 4)
    )
    ^
db/seeds.rb:183:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/controllers/application_controller_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# spec/controllers/application_controller_spec.rb
^
spec/controllers/application_controller_spec.rb:17:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/controllers/student_courses_controller_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# spec/controllers/student_courses_controller_spec.rb
^
spec/controllers/student_courses_controller_spec.rb:10:68: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        expect(assigns(:student_courses)).to eq(StudentCourse.none) 
                                                                   ^
spec/controllers/student_courses_controller_spec.rb:17:121: C: [Correctable] Layout/LineLength: Line is too long. [230/120]
    let(:student) { Student.create!(first_name: 'Test1', last_name: 'Student1', email: 'test1@student.com', google_id: '123457', enrol_year: 2023, grad_year: 2025, enrol_semester: 'spring', grad_semester: 'spring', major: major) }
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/student_courses_controller_spec.rb:17:223: C: [Correctable] Style/HashSyntax: Omit the hash value.
    let(:student) { Student.create!(first_name: 'Test1', last_name: 'Student1', email: 'test1@student.com', google_id: '123457', enrol_year: 2023, grad_year: 2025, enrol_semester: 'spring', grad_semester: 'spring', major: major) }
                                                                                                                                                                                                                              ^^^^^
spec/controllers/student_courses_controller_spec.rb:21:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        expect {
    ^^^^
spec/controllers/student_courses_controller_spec.rb:21:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/controllers/student_courses_controller_spec.rb:23:11: C: [Correctable] Layout/BlockAlignment: } at 23, 10 is not aligned with expect { at 21, 8.
          }.to change(StudentCourse, :count).by(1)
          ^
spec/controllers/student_courses_controller_spec.rb:24:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/controllers/student_courses_controller_spec.rb:30:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        expect {
    ^^^^
spec/controllers/student_courses_controller_spec.rb:30:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/controllers/student_courses_controller_spec.rb:32:49: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        }.to change(StudentCourse, :count).by(0)  
                                                ^^
spec/controllers/student_courses_controller_spec.rb:33:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/controllers/student_courses_controller_spec.rb:34:50: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        expect(response).to render_template(:new) 
                                                 ^
spec/controllers/student_courses_controller_spec.rb:35:48: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        expect(flash.now[:alert]).to be_present  
                                               ^^
spec/controllers/student_courses_controller_spec.rb:37:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/controllers/student_courses_controller_spec.rb:41:86: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
    let(:major) { Major.create!(mname: 'Test Major', cname: 'Test Major Full Name') } 
                                                                                     ^
spec/controllers/student_courses_controller_spec.rb:42:121: C: [Correctable] Layout/LineLength: Line is too long. [227/120]
    let(:student) { Student.create!(first_name: 'Test', last_name: 'Student', email: 'test@student.com', google_id: '123456', enrol_year: 2023, grad_year: 2025, enrol_semester: 'spring', grad_semester: 'spring', major: major) }
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/student_courses_controller_spec.rb:42:220: C: [Correctable] Style/HashSyntax: Omit the hash value.
    let(:student) { Student.create!(first_name: 'Test', last_name: 'Student', email: 'test@student.com', google_id: '123456', enrol_year: 2023, grad_year: 2025, enrol_semester: 'spring', grad_semester: 'spring', major: major) }
                                                                                                                                                                                                                           ^^^^^
spec/controllers/student_courses_controller_spec.rb:44:60: C: [Correctable] Style/HashSyntax: Omit the hash value.
    let!(:student_course) { StudentCourse.create!(student: student, course: course, sem: 'fall') }
                                                           ^^^^^^^
spec/controllers/student_courses_controller_spec.rb:44:77: C: [Correctable] Style/HashSyntax: Omit the hash value.
    let!(:student_course) { StudentCourse.create!(student: student, course: course, sem: 'fall') }
                                                                            ^^^^^^
spec/controllers/student_courses_controller_spec.rb:54:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/controllers/student_courses_controller_spec.rb:54:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/models/student_login_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# spec/models/student_login_spec.rb
^
spec/models/student_login_spec.rb:27:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/models/student_login_spec.rb:28:43: C: [Correctable] Style/HashSyntax: Omit the hash value.
          StudentLogin.from_google(email: email, full_name: full_name, uid: uid, avatar_url: avatar_url)
                                          ^^^^^
spec/models/student_login_spec.rb:28:61: C: [Correctable] Style/HashSyntax: Omit the hash value.
          StudentLogin.from_google(email: email, full_name: full_name, uid: uid, avatar_url: avatar_url)
                                                            ^^^^^^^^^
spec/models/student_login_spec.rb:28:77: C: [Correctable] Style/HashSyntax: Omit the hash value.
          StudentLogin.from_google(email: email, full_name: full_name, uid: uid, avatar_url: avatar_url)
                                                                            ^^^
spec/models/student_login_spec.rb:28:94: C: [Correctable] Style/HashSyntax: Omit the hash value.
          StudentLogin.from_google(email: email, full_name: full_name, uid: uid, avatar_url: avatar_url)
                                                                                             ^^^^^^^^^^
spec/models/student_login_spec.rb:41:37: C: [Correctable] Style/HashSyntax: Omit the hash value.
        StudentLogin.create!(email: email, full_name: full_name, uid: uid, avatar_url: avatar_url)
                                    ^^^^^
spec/models/student_login_spec.rb:41:55: C: [Correctable] Style/HashSyntax: Omit the hash value.
        StudentLogin.create!(email: email, full_name: full_name, uid: uid, avatar_url: avatar_url)
                                                      ^^^^^^^^^
spec/models/student_login_spec.rb:41:71: C: [Correctable] Style/HashSyntax: Omit the hash value.
        StudentLogin.create!(email: email, full_name: full_name, uid: uid, avatar_url: avatar_url)
                                                                      ^^^
spec/models/student_login_spec.rb:41:88: C: [Correctable] Style/HashSyntax: Omit the hash value.
        StudentLogin.create!(email: email, full_name: full_name, uid: uid, avatar_url: avatar_url)
                                                                                       ^^^^^^^^^^
spec/models/student_login_spec.rb:45:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/models/student_login_spec.rb:46:43: C: [Correctable] Style/HashSyntax: Omit the hash value.
          StudentLogin.from_google(email: email, full_name: full_name, uid: uid, avatar_url: avatar_url)
                                          ^^^^^
spec/models/student_login_spec.rb:46:61: C: [Correctable] Style/HashSyntax: Omit the hash value.
          StudentLogin.from_google(email: email, full_name: full_name, uid: uid, avatar_url: avatar_url)
                                                            ^^^^^^^^^
spec/models/student_login_spec.rb:46:77: C: [Correctable] Style/HashSyntax: Omit the hash value.
          StudentLogin.from_google(email: email, full_name: full_name, uid: uid, avatar_url: avatar_url)
                                                                            ^^^
spec/models/student_login_spec.rb:46:94: C: [Correctable] Style/HashSyntax: Omit the hash value.
          StudentLogin.from_google(email: email, full_name: full_name, uid: uid, avatar_url: avatar_url)
                                                                                             ^^^^^^^^^^
spec/models/student_spec.rb:107:9: F: Lint/Syntax: unexpected token tIDENTIFIER
(Using Ruby 3.3 parser; configure using TargetRubyVersion parameter, under AllCops)
        track_id: 'Systems'
        ^^^^^^^^
spec/models/student_spec.rb:113:3: F: Lint/Syntax: unexpected token kEND
(Using Ruby 3.3 parser; configure using TargetRubyVersion parameter, under AllCops)
  end
  ^^^
spec/requests/core_categories_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
spec/requests/core_categories_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
spec/requests/core_categories_spec.rb:2:1: C: [Correctable] Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
require 'rails_helper'
^^^^^^^
spec/requests/core_categories_spec.rb:4:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Admin::CoreCategories", type: :request do
               ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/core_categories_spec.rb:5:54: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let!(:core_category) { CoreCategory.create!(cname: "Sample Category") }
                                                     ^^^^^^^^^^^^^^^^^
spec/requests/core_categories_spec.rb:7:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /admin/core_categories" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/core_categories_spec.rb:8:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/core_categories_spec.rb:14:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /admin/core_categories/new" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/core_categories_spec.rb:15:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/core_categories_spec.rb:21:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /admin/core_categories/:id/edit" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/core_categories_spec.rb:22:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/core_categories_spec.rb:28:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "POST /admin/core_categories" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/core_categories_spec.rb:29:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "creates a core category and redirects" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/core_categories_spec.rb:30:74: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      post admin_core_categories_path, params: { core_category: { cname: "New Category" } }
                                                                         ^^^^^^^^^^^^^^
spec/requests/core_categories_spec.rb:35:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "DELETE /admin/core_categories/:id" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/core_categories_spec.rb:36:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "deletes the core category and redirects" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/core_categories_spec.rb:42:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /admin/core_categories/:id/confirm_destroy" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/core_categories_spec.rb:43:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/core_categories_spec.rb:49:1: C: [Correctable] Layout/TrailingEmptyLines: 1 trailing blank lines detected.
spec/requests/courses_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
spec/requests/courses_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
spec/requests/courses_spec.rb:2:1: C: [Correctable] Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
=begin ...
^^^^^^
spec/requests/courses_spec.rb:2:1: C: [Correctable] Style/BlockComments: Do not use block comments.
=begin ...
^^^^^^
spec/requests/emphases_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
spec/requests/emphases_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
spec/requests/emphases_spec.rb:2:1: C: [Correctable] Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
=begin ...
^^^^^^
spec/requests/emphases_spec.rb:2:1: C: [Correctable] Style/BlockComments: Do not use block comments.
=begin ...
^^^^^^
spec/requests/emphases_spec.rb:64:1: C: [Correctable] Layout/TrailingEmptyLines: 1 trailing blank lines detected.
spec/requests/home_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# # frozen_string_literal: true
^
spec/requests/majors_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
spec/requests/majors_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
spec/requests/majors_spec.rb:2:1: C: [Correctable] Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
require 'rails_helper'
^^^^^^^
spec/requests/majors_spec.rb:4:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Admin::Majors", type: :request do
               ^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:5:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let!(:major) { Major.create(cname: "Computer Science", mname: "CS") } # Create a Major for testing
                                     ^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:5:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let!(:major) { Major.create(cname: "Computer Science", mname: "CS") } # Create a Major for testing
                                                                ^^^^
spec/requests/majors_spec.rb:7:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /admin/majors" do
           ^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:8:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:14:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /admin/majors/new" do
           ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:15:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:21:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /admin/majors/:id/edit" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:22:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:27:1: C: [Correctable] Style/BlockComments: Do not use block comments.
=begin ...
^^^^^^
spec/requests/majors_spec.rb:36:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "POST /admin/majors" do
           ^^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:37:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:38:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "creates a new major and redirects" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:39:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/majors_spec.rb:40:61: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          post admin_majors_path, params: { major: { cname: "Mathematics", mname: "MATH" } }
                                                            ^^^^^^^^^^^^^
spec/requests/majors_spec.rb:40:83: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          post admin_majors_path, params: { major: { cname: "Mathematics", mname: "MATH" } }
                                                                                  ^^^^^^
spec/requests/majors_spec.rb:47:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:48:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "re-renders the new template" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:49:59: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        post admin_majors_path, params: { major: { cname: "", mname: "" } }
                                                          ^^
spec/requests/majors_spec.rb:49:70: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        post admin_majors_path, params: { major: { cname: "", mname: "" } }
                                                                     ^^
spec/requests/majors_spec.rb:55:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "PATCH /admin/majors/:id" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:56:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:57:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "updates the major and redirects" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:58:66: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        patch admin_major_path(major), params: { major: { cname: "Updated CS", mname: "Updated Major" } }
                                                                 ^^^^^^^^^^^^
spec/requests/majors_spec.rb:58:87: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        patch admin_major_path(major), params: { major: { cname: "Updated CS", mname: "Updated Major" } }
                                                                                      ^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:59:42: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(major.reload.cname).to eq("Updated CS")
                                         ^^^^^^^^^^^^
spec/requests/majors_spec.rb:64:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:65:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "re-renders the edit template" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:66:66: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        patch admin_major_path(major), params: { major: { cname: "", mname: "" } }
                                                                 ^^
spec/requests/majors_spec.rb:66:77: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        patch admin_major_path(major), params: { major: { cname: "", mname: "" } }
                                                                            ^^
spec/requests/majors_spec.rb:72:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "DELETE /admin/majors/:id" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:73:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "deletes the major and redirects" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:80:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /admin/majors/:id/confirm_destroy" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:81:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/majors_spec.rb:87:1: C: [Correctable] Layout/TrailingEmptyLines: 1 trailing blank lines detected.
spec/requests/student_courses_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
spec/requests/student_courses_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
spec/requests/student_courses_spec.rb:2:1: C: [Correctable] Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
require 'rails_helper'
^^^^^^^
spec/requests/student_courses_spec.rb:6:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/student_courses_spec.rb:17:14: C: [Correctable] Style/HashSyntax: Omit the hash value.
      major: major
             ^^^^^
spec/requests/student_courses_spec.rb:20:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/student_courses_spec.rb:26:121: C: Layout/LineLength: Line is too long. [324/120]
      description: 'Application of engineering approach to computer software design and development; life cycle models, software requirements and specification; conceptual model design; detailed design; validation and verification; design quality assurance; software design/development environments and project management.',
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/student_courses_spec.rb:73:7: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - student_course.
      student_course = StudentCourse.create!(student_id: student.id, course_id: course.id, sem: 3)
      ^^^^^^^^^^^^^^
spec/requests/student_courses_spec.rb:81:7: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - student_course.
      student_course = StudentCourse.create!(student_id: student.id, course_id: course.id, sem: 1)
      ^^^^^^^^^^^^^^
spec/requests/student_courses_spec.rb:82:121: C: [Correctable] Layout/LineLength: Line is too long. [135/120]
      patch student_course_path(student_id: student.id, course_id: course.id), params: { student_course: { course_id: course.id + 1 } }
                                                                                                                        ^^^^^^^^^^^^^^^
spec/requests/student_courses_spec.rb:89:7: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - student_course.
      student_course = StudentCourse.create!(student_id: student.id, course_id: course.id, sem: 1)
      ^^^^^^^^^^^^^^
spec/requests/student_courses_spec.rb:95:1: C: [Correctable] Layout/TrailingEmptyLines: 1 trailing blank lines detected.
spec/requests/tracks_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
spec/requests/tracks_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
spec/requests/tracks_spec.rb:2:1: C: [Correctable] Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
# spec/requests/admin/tracks_spec.rb
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/tracks_spec.rb:5:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Admin::Tracks", type: :request do
               ^^^^^^^^^^^^^^^
spec/requests/tracks_spec.rb:6:39: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let!(:track) { Track.create!(tname: "Systems") } # Directly creating a track
                                      ^^^^^^^^^
spec/requests/tracks_spec.rb:8:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /admin/tracks" do
           ^^^^^^^^^^^^^^^^^^^
spec/requests/tracks_spec.rb:9:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/tracks_spec.rb:16:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /admin/tracks/:id" do
           ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/tracks_spec.rb:17:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/tracks_spec.rb:20:7: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
      #expect(assigns(:track)).to eq(track)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/tracks_spec.rb:24:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "POST /admin/tracks" do
           ^^^^^^^^^^^^^^^^^^^^
spec/requests/tracks_spec.rb:25:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "creates a new track and redirects" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/tracks_spec.rb:26:57: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      post admin_tracks_path, params: { track: { tname: "New Track" } }
                                                        ^^^^^^^^^^^
spec/requests/tracks_spec.rb:29:40: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(response.body).to include("Track successfully created.")
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/tracks_spec.rb:30:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(Track.last.tname).to eq("New Track") # Check if the new track is created
                                     ^^^^^^^^^^^
spec/requests/tracks_spec.rb:33:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "re-renders the index template on failure" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/tracks_spec.rb:34:57: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      post admin_tracks_path, params: { track: { tname: "" } } # Invalid params
                                                        ^^
spec/requests/tracks_spec.rb:40:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "PATCH /admin/tracks/:id" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/tracks_spec.rb:41:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "updates the track and redirects" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/tracks_spec.rb:42:64: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      patch admin_track_path(track), params: { track: { tname: "Updated Track" } }
                                                               ^^^^^^^^^^^^^^^
spec/requests/tracks_spec.rb:45:40: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(response.body).to include("Track successfully updated.")
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/tracks_spec.rb:46:40: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(track.reload.tname).to eq("Updated Track")
                                       ^^^^^^^^^^^^^^^
spec/requests/tracks_spec.rb:49:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "re-renders the index template on failure" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/tracks_spec.rb:50:64: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      patch admin_track_path(track), params: { track: { tname: "" } } # Invalid params
                                                               ^^
spec/requests/tracks_spec.rb:56:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "DELETE /admin/tracks/:id" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/tracks_spec.rb:57:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "deletes the track and redirects" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/tracks_spec.rb:61:40: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(response.body).to include("Track successfully deleted.")
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

210 files inspected, 450 offenses detected, 413 offenses autocorrectable
