<body class="profile-body">
  <div class="profile-header">
    <div class="profile-back-to-dashboard">
      <%= link_to student_dashboard_path(@student.google_id), class: 'profile-back-to-dashboard-link' do %>
        <span class="profile-back-arrow">&#8592;</span>
        Home
      <% end %>
    </div>

    <div class="profile-logo-container">
      <%= image_tag 'logo1.png', alt: 'Cleo Logo', class: 'profile-logo' %>
    </div>

    <div class="profile-user-info">
      <div class="profile-avatar-dropdown">
        <!-- Avatar Image -->
        <%= image_tag(current_student_login.avatar_url.present? ? current_student_login.avatar_url : 'default_avatar_url.jpg', alt: 'User Avatar', class: 'profile-avatar', id: 'avatar') %>

        <!-- Dropdown Menu -->
        <div class="profile-dropdown-menu" id="dropdown-menu">
          <%= link_to "Profile", profile_student_path(current_student_login), class: 'profile-dropdown-link'%>
          <%= link_to 'Settings', profile_student_path(current_student_login), class: 'profile-dropdown-link' %>
          <%= link_to 'Sign Out', destroy_student_login_session_path, method: :delete, class: 'profile-dropdown-link' %>
        </div>
      </div>
    </div>
  </div>

  <h1 class="degreeplan-title">Default Degree Planner</h1>
  

  <%= form_with url: save_degree_plan_path, method: :post, local: true, class: 'degreeplan-form' do |f| %>
  


<%#
  <div>
    <label for="core_curriculum">Core Curriculum:</label>
    <%= f.select :core_curriculum, options_for_select(['Curriculum 1', 'Curriculum 2', 'Curriculum 3']) %>
  </div>

<div id="degreeplan-container" class="degreeplan-semesters grid">
  <% semesters = [
      { semester: 1, courses: [
          { name: 'ENGR', crn: '102', credits: 2 },
          { name: 'MATH', crn: '151', credits: 4 },
          { name: 'CHEM', crn: '107/117', credits: 4 },
          { name: 'ENGL', crn: '104 or 103', credits: 3 },
          { name: 'UCC Elective', crn: '', credits: 3 }
        ] },
      { semester: 2, courses: [
          { name: 'ENGR', crn: '216', credits: 2 },
          { name: 'PHYS', crn: '206', credits: 3 },
          { name: 'MATH', crn: '152', credits: 4 },
          { name: 'ENGL', crn: '210', credits: 3 },
          { name: 'UCC Elective', crn: '', credits: 3 }
        ] },
      { semester: 3, courses: [
          { name: 'CSCE', crn: '121', credits: 4 },
          { name: 'CSCE', crn: '222', credits: 3 },
          { name: 'CSCE', crn: '181', credits: 1 },
          { name: 'MATH', crn: '304', credits: 3 },
          { name: 'Science elective', crn: '', credits: 4 }
        ] },
      { semester: 4, courses: [
          { name: 'CSCE', crn: '221', credits: 4 },
          { name: 'CSCE', crn: '312', credits: 4 },
          { name: 'CSCE', crn: '314', credits: 3 },
          { name: 'Emphasis area elective', crn: '', credits: 3 },
          { name: 'UCC Elective', crn: '', credits: 3 }
        ] },
      { semester: 5, courses: [
          { name: 'CSCE', crn: '313', credits: 4 },
          { name: 'CSCE', crn: '411', credits: 3 },
          { name: 'CSCE', crn: '315', credits: 3 },
          { name: 'STAT', crn: '211', credits: 3 },
          { name: 'Emphasis area elective', crn: '', credits: 3 }
        ] },
      { semester: 6, courses: [
          { name: 'CSCE', crn: '399', credits: 0 },
          { name: 'Computer Science Elective', crn: '', credits: 3 },
          { name: 'Computer Science Elective', crn: '', credits: 3 },
          { name: 'General elective', crn: '', credits: 3 },
          { name: 'General elective', crn: '', credits: 3 }
        ] },
      { semester: 7, courses: [
          { name: 'CSCE', crn: '490', credits: 3 },
          { name: 'Computer Science Elective', crn: '', credits: 3 },
          { name: 'General elective', crn: '', credits: 3 },
          { name: 'General elective', crn: '', credits: 3 },
          { name: 'General elective', crn: '', credits: 3 }
        ] },
      { semester: 8, courses: [
          { name: 'CSCE', crn: '499', credits: 3 },
          { name: 'General elective', crn: '', credits: 3 },
          { name: 'General elective', crn: '', credits: 3 },
          { name: 'General elective', crn: '', credits: 3 },
          { name: 'General elective', crn: '', credits: 3 }
        ] }
    ] %>

  <% semesters.each do |semester_data| %>
    <div class="semester-container">
      <h3>Semester <%= semester_data[:semester] %>:</h3>
      <table>
        <thead>
          <tr>
            <th>Course Name</th>
            <th>CRN</th>
            <th>Credit</th>
            <th>Delete</th>
          </tr>
        </thead>
        <tbody>
          <% semester_data[:courses].each_with_index do |course, index| %>
            <tr>
              <td><%= f.text_field "container#{semester_data[:semester]}_course#{index + 1}", value: course[:name], placeholder: 'Course Name' %></td>
              <td><%= f.text_field "container#{semester_data[:semester]}_crn#{index + 1}", value: course[:crn], placeholder: 'CRN' %></td>
              <td><%= f.number_field "container#{semester_data[:semester]}_credit#{index + 1}", value: course[:credits], placeholder: 'Credit', min: 0 %></td>
              <td><%= link_to 'x', '#', class: 'delete-course', data: { target: "course-row-#{semester_data[:semester]}-#{index + 1}" } %></td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>
  <% end %>
</div>

<div class="action-buttons">
<%= form_with url: download_plan_student_degree_planner_path(@student), method: :post do |f| %>
  <%= f.submit 'Save Degree Plan', class: 'action-button save-button' %>
  <%= f.submit 'Download Degree Plan', class: 'action-button download-button' %>
<% end %>
</div>

<% end %>
<script>
  document.querySelectorAll('.add-course').forEach(button => {
    button.addEventListener('click', function() {
      const semester = this.getAttribute('data-semester');
      const tbody = this.previousElementSibling.querySelector('tbody');
      const rowCount = tbody.rows.length + 1; // Count existing rows

      const newRow = `<tr>
                        <td><input type="text" name="container${semester}_course${rowCount}" placeholder="Course Name"></td>
                        <td><input type="text" name="container${semester}_crn${rowCount}" placeholder="CRN"></td>
                        <td><input type="number" name="container${semester}_credit${rowCount}" placeholder="Credit" min="0"></td>
                        <td><a href="#" class="delete-course" data-index="${semester}_${rowCount}">x</a></td>
                      </tr>`;

      tbody.insertAdjacentHTML('beforeend', newRow);
    });
  });
</script>
<!-- JavaScript for toggling dropdown -->
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const avatar = document.getElementById('avatar');
      const dropdownMenu = document.getElementById('dropdown-menu');

      // Toggle dropdown visibility
      avatar.addEventListener('click', function() {
        dropdownMenu.classList.toggle('profile-show');
      });

      // Hide dropdown if clicking outside
      document.addEventListener('click', function(event) {
        if (!avatar.contains(event.target) && !dropdownMenu.contains(event.target)) {
          dropdownMenu.classList.remove('profile-show');
        }
      });
    });

  </script>
<script>
  document.addEventListener('turbolinks:load', function() {
    document.querySelectorAll('.delete-course').forEach(function(link) {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        const target = e.currentTarget.getAttribute('data-target');
        const row = document.getElementById(target);
        if (row) {
          row.remove();
        }
      });
    });
  });

</script>